#!/usr/bin/env python
PACKAGE = "flypulator_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# gen.add("int_param",    int_t,    0, "An Integer parameter", 50,  0, 100)
# gen.add("double_param", double_t, 0, "A double parameter",    .5, 0,   1)
# gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
# gen.add("bool_param",   bool_t,   0, "A Boolean parameter",  True)

# size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
#                        gen.const("Medium",     int_t, 1, "A medium constant"),
#                        gen.const("Large",      int_t, 2, "A large constant"),
#                        gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
#                      "An enum to set size")

# gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)

gen.add("control_enabled",     bool_t, 0, "Enable controller", False)

gen.add("pid_k_T_P",          double_t, 0, "PID: translational k for K_T_P matrix",     15,  0,  100) #6
gen.add("pid_k_T_I",        double_t, 0, "PID: translational k for K_T_I matrix",   15, 0,  100) #15
gen.add("pid_k_T_D",     double_t, 0, "PID: translational k for K_T_D matix",                  3.5, 0,  100) # 10

gen.add("pid_k_T_P_z",          double_t, 0, "PID: translational k_z for K_T_P matrix",     15,  0,  100) #6
gen.add("pid_k_T_I_z",        double_t, 0, "PID: translational k_z for K_T_I matrix",  15, 0,  100) #15
gen.add("pid_k_T_D_z",     double_t, 0, "PID: translational k_z for K_T_D matix",                  3.5, 0,  100) # 10

gen.add("pid_k_R_P",          double_t, 0, "PID: translational k for K_R_P matrix",    40,  0,  100) #6
gen.add("pid_k_R_I",        double_t, 0, "PID: translational k for K_R_I matrix",  40, 0,  100) #15
gen.add("pid_k_R_D",     double_t, 0, "PID: translational k for K_R_D matrix",                  15, 0,  100) # 10

gen.add("pid_k_R_P_yaw",          double_t, 0, "PID: translational k for K_R_P matrix_yaw",    12,  0,  100) #6
gen.add("pid_k_R_I_yaw",        double_t, 0, "PID: translational k for K_R_I matrix_yaw",    12, 0,  100) #15
gen.add("pid_k_R_D_yaw",     double_t, 0, "PID: translational k for K_R_D matrix_yaw",                  5, 0,  100) # 10

gen.add("pid_I_max_T",      double_t, 0, "pid: translational anti-windup threshold for p_error", 0.1, 0,20)
gen.add("pid_I_max_R",      double_t, 0, "pid: rotation anti-windup threshold for R_error", 6, 0,20)
exit(gen.generate(PACKAGE, "flypulator_control", "pid_parameter"))
